<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.EventMapper">

    <sql id="Base_Column_List">
        event.id,event.name,event.start,event.last,event.description,event.img,event.categoryId,event.price,event.status,event.count,event.businessId,event.address,event.userId
    </sql>

    <select id="selectAll" resultType="com.example.entity.Event">
        select *, eventCategory.name as categoryName, business.name as businessName, user.name as userName
        from event
        left join eventCategory on event.categoryId = eventCategory.id
        left join business on event.businessId = business.id
        left join user on event.userId = user.id
        <where>
            <if test="id != null"> and event.id= #{event.id}</if>
            <if test="name != null"> and event.name like concat('%', #{event.name}, '%')</if>
            <if test="start != null"> and event.start= #{event.start}</if>
            <if test="price != null"> and event.price= #{event.price}</if>
            <if test="last != null"> and event.last= #{event.last}</if>
            <if test="description != null"> and event.description= #{event.description}</if>
            <if test="img != null"> and event.img= #{event.img}</if>
            <if test="categoryId != null"> and categoryId= #{categoryId}</if>
            <if test="status != null"> and status= #{status}</if>
            <if test="count != null"> and count= #{count}</if>
            <if test="businessId != null"> and businessId= #{businessId}</if>
            <if test="address != null"> and event.address= #{event.address}</if>
            <if test="userId != null"> and event.userId= #{event.userId}</if>
        </where>
        order by event.id
    </select>

    <select id="selectAllFromRepository" resultType="com.example.entity.Event">
        select
        <include refid="Base_Column_List" />, eventCategory.name as categoryName
        from event
        left join repository on repository.eventId = event.id
        left join eventCategory on event.categoryId = eventCategory.id
        <where>
            <if test="event.id != null"> and event.id= #{event.id}</if>
            <if test="event.name != null"> and event.name like concat('%', #{event.name}, '%')</if>
            <if test="event.start != null"> and event.start= #{event.start}</if>
            <if test="event.price != null"> and event.price= #{event.price}</if>
            <if test="event.last != null"> and event.last= #{event.last}</if>
            <if test="event.description != null"> and event.description= #{event.description}</if>
            <if test="event.img != null"> and event.img= #{event.img}</if>
            <if test="event.categoryId != null"> and categoryId= #{categoryId}</if>
            <if test="event.status != null"> and status= #{status}</if>
            <if test="event.count != null"> and count= #{count}</if>
            <if test="event.businessId != null"> and businessId= #{businessId}</if>
            <if test="event.address != null"> and event.address= #{event.address}</if>
            <if test="event.userId != null"> and event.userId= #{event.userId}</if>
            and repository.userId = #{repositoryUserId}
        </where>
        order by event.id
    </select>

    <select id="selectById" resultType="com.example.entity.Event">
        select
        <include refid="Base_Column_List" />, business.name as businessName, eventCategory.name as categoryName, eventCategory.img as categoryImg, user.name as userName
        from event
        left join eventCategory on event.categoryId = eventCategory.id
        left join business on event.businessId = business.id
        left join user on event.userId = user.id
        where event.id = #{event.id}
    </select>

    <delete id="deleteById">
        delete from event
        where  id = #{id}
    </delete>

    <insert id="insert" parameterType="com.example.entity.Event" useGeneratedKeys="true" keyProperty="id">
        insert into event
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="name != null">name,</if>
                <if test="price != null">price,</if>
                <if test="start != null">start,</if>
                <if test="last != null">last,</if>
                <if test="description != null">description,</if>
                <if test="img != null">img,</if>
                <if test="categoryId != null">categoryId,</if>
                <if test="status != null">status,</if>
                <if test="count != null">count,</if>
                <if test="businessId != null">businessId,</if>
                <if test="address != null">address,</if>
                <if test="userId != null">userId,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id},</if>
                <if test="name != null">#{name},</if>
                <if test="price != null">#{price},</if>
                <if test="start != null">#{start},</if>
                <if test="last != null">#{last},</if>
                <if test="description != null">#{description},</if>
                <if test="img != null">#{img},</if>
                <if test="categoryId != null">#{categoryId},</if>
                <if test="status != null">#{status},</if>
                <if test="count != null">#{count},</if>
                <if test="businessId != null">#{businessId},</if>
                <if test="address != null">#{address},</if>
                <if test="userId != null">#{userId},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.example.entity.Event">
        update event
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="start != null">
                start = #{start},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="last != null">
                last = #{last},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="img != null">
                img = #{img},
            </if>
            <if test="categoryId != null">
                categoryId = #{categoryId},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="count != null">
                count = #{count},
            </if>
            <if test="businessId != null">
                businessId = #{businessId},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="userId != null">
                userId = #{userId},
            </if>
        </set>
        where id = #{id} 
    </update>

</mapper>